#!/bin/bash

SCRIPT=$(readlink -f "$0")
BASEDIR=$(dirname "$SCRIPT")

folder_file=$BASEDIR/folder-base
config_file=$BASEDIR/config-base
command_file=$BASEDIR/command-base
zsh_base=$BASEDIR/zsh-base

zsh_file=$HOME/.config/zsh/aliases
fish_file=$HOME/.config/fish/abbreviations

if [ ! -f $folder_file ] ; then
    touch $folder_file
fi
if [ ! -f $config_file ] ; then
    touch $config_file
fi
if [ ! -f $command_file ] ; then
    touch $command_file
fi
if [ ! -f $zsh_base ] ; then
    touch $zsh_base
fi

usage="$(basename "$0") [-h][-g][-e <type>] -- generates aliases for zsh and fish

usage:    aliases [arguments]
   or:    aliases [arguments] [type]

Arguments:
    -h or --help        Prints help instructions
    -g or --generate    Generates aliases for both zsh and fish
    --fish              Generates abbreviations for fish only
    --zsh               Generates aliases for zsh only
    -e or --edit [type] Edits the specified alias base-file
                        based on its type: folder, config
                        or command 

This script uses four base-files: folder-base for folder aliases, 
config-base for config editing aliases, command-base for custom command
aliases and log-base for log based command aliases. All files should be 
located in the same folder as this script file.

The base files are layed out as follows:
Desired alias      folder/file/command       argument (in case of command base)

The aliases are generated as follows (fish shell used as example):
Folder - uses cd command. E.g. abbr <alias> 'cd <folder>'
Config - uses vim. E.g. abbr <alias> 'vim <file>'
Command - uses specified command. E.g. abbr <alias> '<command> <argument>'

Alias/Abbreviation files are the following:
$HOME/.config/zsh/aliases
$HOME/.config/fish/abbreviations

Each file is included in their respective shell config file, zshrc or config.fish"

add_fish_or_zsh_alias(){

    if [ "$1" = "fish" ] ; then
        if [ -f $fish_file  ] ; then
            rm $fish_file
        else
            touch $fish_file
        fi
        file=$fish_file
        cmd="abbr"
        comp=" "
        echo "# vi: syntax=sh" >> $file
    fi

    if [ "$1" = "zsh" ] ; then
        if [ -f $zsh_file  ] ; then
            rm $zsh_file
        else
            touch $zsh_file
        fi
        file=$zsh_file
        cmd="alias"
        comp="="
        echo "# vi: syntax=zsh" >> $file
        echo -e "\n# Function based aliases\n" >> $zsh_file
        sed "1d" $zsh_base >> $zsh_file
    fi
    

    echo -e "\n# Folder aliases\n" >> $file
    sed "s/\s*#.*$//;/^\s*$/d" $folder_file | awk -v c=$cmd -v o="$comp" '{ print c" "$1""o"\"cd "$2"\"" }' >> $file

    echo -e "\n# Config files aliases\n" >> $file
    sed "s/\s*#.*$//;/^\s*$/d" $config_file | awk -v c=$cmd -v o="$comp" '{ print c" "$1""o"\"vim "$2"\"" }' >> $file

    echo -e "\n# Command aliases\n" >> $file
    sed "s/\s*#.*$//;/^\s*$/d" $command_file | awk -v c=$cmd -v o="$comp" '{
        printf "%s %s%s", c, $1, o
        $1=""; sub(/^\s*/, "", $0);
        printf "\"%s\"\n", $0
    }' >> $file

}

if [ "$1" = "--help" ] || [ "$1" = "-h" ] ; then
    echo "$usage"         
    exit 0
fi

if [ "$1" = "--fish" ] ; then
    if [ -z $2 ] ; then
        add_fish_or_zsh_alias fish
        fish -c source ~/.config/fish/config.fish
        echo "Fish abbreviations successfully generated!"
        exit 0
    else
        echo "$(basename "$0"): $1 takes no arguments
Try -h or --help for more information"
        exit 0
    fi
fi

if [ "$1" = "--zsh" ] ; then
    if [ -z $2 ] ; then
        add_fish_or_zsh_alias zsh
        fish -c source ~/.config/zsh/zshrc
        echo "Zsh aliases successfully generated!"
        exit 0
    else
        echo "$(basename "$0"): $1 takes no arguments
Try -h or --help for more information"
        exit 0
    fi
fi

if [ "$1" = "-g" ] || [ "$1" = "--generate" ] ; then

    if [ -z "$2" ] ; then
        add_fish_or_zsh_alias fish
        add_fish_or_zsh_alias zsh
        fish -c source ~/.config/fish/config.fish
        fish -c source ~/.config/zsh/zshrc
        echo "Aliases successfully generated!"
        exit 0
    else
        echo "$(basename "$0"): $1 takes no arguments
Try -h or --help for more information"
        exit 0
    fi
fi

if [ "$1" = "-e" ] || [ "$1" = "--edit" ] ; then
    if [ -z "$2" ] ; then
        echo "$(basename "$0"): $1 needs a file type
E.g. aliases -e folder"
        exit 0
    else
        file=""
        case $2 in
            "folder")
                file=$folder_file
                ;;
            "config")
                file=$config_file
                ;;
            "command")
                file=$command_file
                ;;
            "log")
                file=$log_file
                ;;
        esac     
        vim $file
        exit 0
    fi
fi

echo "$(basename "$0"): argument missing 
Try -h or --help for more information"
exit 0
